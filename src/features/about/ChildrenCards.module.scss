@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

.cards input[type="radio"] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.cards {
  --img-w: clamp(280px, 75.9vw, 400px);
  --duration: 300ms;
  --img-easing: cubic-bezier(0.34, 1.56, 0.64, 1);
  // width: min(100% - 4rem, 800px);
  width: min(100% - 4rem, 500px);
  margin-inline: auto;
  display: grid;
  counter-reset: my-counter;
  margin: 50px 0 0px -30px;
}

.card {
  --cards-grid-cols: auto;
  --cards-grid-rows: var(--img-w) auto;
  --cards-grid-gap: 2rem;
  --cards-footer-justify: center;

  grid-area: 1 / 1;
  display: grid;
  place-items: center;
  grid-template-columns: var(--cards-grid-cols);
  grid-template-rows: var(--cards-grid-rows);
  gap: var(--cards-grid-gap);

  z-index: -1;

  .cardImg {
    width: 77vw;
    height: 75.9vw;
    min-width: 280px;
    min-height: 309px;
    aspect-ratio: 1 / 1;
    rotate: var(--angle, 0deg);
    border-radius: 10px;
    border: 3px solid #fff;
    overflow: hidden;
    transform-origin: center;
    object-fit: cover;
    box-shadow: 0 0 5px 3px rgba(0 0 0 / 0.05);
  }

  .cardData {
    display: grid;
    gap: 1rem;

    .cardNum {
      opacity: var(--data-opacity, 0);
      font-size: 0.8rem;
      color: #666;
      padding-top: 1rem;
      text-align: center;
    }

    > p,
    > h2 {
      transition: var(--duration) ease-in-out;
      transition-delay: var(--data-delay, 0ms);
      opacity: var(--data-opacity, 0);
      translate: 0 var(--data-y, 20px);
    }

    > p {
      font-size: 0.9rem;
    }

    > footer {
      display: flex;
      justify-content: var(--cards-footer-justify);
      gap: 1rem;
      background: transparent;

      label {
        margin-block-start: auto;
        cursor: pointer;
        pointer-events: var(--card-events, none);
        opacity: var(--data-opacity, 0);
        transition:
          color var(--duration) ease-in-out,
          background-color 300ms ease-in-out;

        color: var(--label-clr-txt, #64d172);
        background-color: var(--label-clr-bg, #eee);
        border-radius: 50%;
        width: 32px;
        height: 32px;
        aspect-ratio: 1/1;
        display: grid;
        place-content: center;

        &:hover {
          --label-clr-txt: #aacfaa;
          --label-clr-bg: #dddbdb;
        }
      }
    }
  }
}

@media (min-width: 768px) {
  .cards {
    margin: 50px;
  }

  .card {
    --cards-grid-cols: var(--img-w) auto;
    --cards-grid-rows: auto;
    --cards-grid-gap: 4rem;
    --cards-footer-justify: start;
  }
}

@media (min-width: 528px) {
  .cards {
    --img-w: 400px;
    margin-left: 30px;
  }
  .card {
    .cardImg {
      width: 400px;
      height: 400px;
    }
  }
}

/* Straighten images based on radio state */
input:nth-of-type(1):checked + .card ~ .card > .cardImg {
  animation: straighten-img-1 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(2):checked) > .cardImg,
input:nth-of-type(2):checked + .card ~ .card > .cardImg {
  animation: straighten-img-2 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(3):checked) > .cardImg,
input:nth-of-type(3):checked + .card ~ .card > .cardImg {
  animation: straighten-img-3 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(4):checked) > .cardImg,
input:nth-of-type(4):checked + .card ~ .card > .cardImg {
  animation: straighten-img-4 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(5):checked) > .cardImg,
input:nth-of-type(5):checked + .card ~ .card > .cardImg {
  animation: straighten-img-5 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(6):checked) > .cardImg,
input:nth-of-type(6):checked + .card ~ .card > .cardImg {
  animation: straighten-img-6 calc(var(--duration) * 2) forwards var(--img-easing);
}
.card:has(~ input:nth-of-type(7):checked) > .cardImg,
input:nth-of-type(7):checked + .card ~ .card > .cardImg {
  animation: straighten-img-7 calc(var(--duration) * 2) forwards var(--img-easing);
}

@keyframes straighten-img-1 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-2 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-3 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-4 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-5 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-6 {
  50% {
    --angle: 0deg;
  }
}
@keyframes straighten-img-7 {
  50% {
    --angle: 0deg;
  }
}

/* Z-index control for card stack order */
input:checked + .card {
  z-index: 10 !important;
}
.card:has(+ input:checked) {
  z-index: 9;
}
.card:has(+ input + .card + input:checked) {
  z-index: 8;
}
.card:has(+ input + .card + input + .card + input:checked) {
  z-index: 7;
}
.card:has(+ input + .card + input + .card + input + .card + input:checked) {
  z-index: 6;
}
.card:has(+ input + .card + input + .card + input + .card + input + .card + input:checked) {
  z-index: 5;
}
.card:has(+ input + .card + input + .card + input + .card + input + .card + input + .card + input:checked) {
  z-index: 4;
}
.card:has(
    + input + .card + input + .card + input + .card + input + .card + input + .card + input + .card + input:checked
  ) {
  z-index: 3;
}

/* Reveal card data when checked */
input:checked + .card {
  --data-opacity: 1;
  --data-y: 0;
  --data-delay: var(--duration);
  --card-events: auto;

  gap: 0;
  transition: z-index;
  transition-delay: 300ms;

  .cardImg {
    animation: reveal-img calc(var(--duration) * 2) forwards;
  }
}

@keyframes reveal-img {
  50% {
    translate: -150% 0;
    --angle: 0deg;
  }
}
